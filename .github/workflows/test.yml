

# This workflow will install will install app dependencies and run unit test
# Then test coverage has a benchmark of 98% 
# notify on slack

name: unit test and coverage

on:
  push:
    branches: ["test/workflow"]
  # pull_request:
  #   branches: ["master"]

jobs:
  # unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup repo
  #       uses: actions/checkout@v3

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}   
  #     - run: |
  #        pwd 
  #        ls -al
  #        cd app
  #        npm install 
  #        npm run build 
  #        npm run test:coverage

 
  merge_to_master:
    # needs: unit-test     
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Create report file
        run: |
           date +%s > report.txt
           cat report.txt
      - name: Expose git commit data
        uses: rlespinasse/git-commit-data-action@v1

      - name: Print git commit data
        run: |
          echo "Get commit info"
          echo " - ${{ env.GIT_COMMIT_SHA }}"
          echo " - ${{ env.GIT_COMMIT_SHORT_SHA }}"
          echo "Get author info"
          echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
          echo "Get committer info"
          echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
          echo "Get message info"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"        




      - name: Commit report
        # run: |
        #   echo ${{ github.head_ref }}
        uses: peter-evans/create-pull-request@v3
        # run: |
        #   echo "${{ env.GIT_COMMIT_COMMITTER_NAME }} ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}" 
        with:
          token: ${{ secrets.GITHUB_TOKEN}}
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          base: test/workflow
          commit-message: autopep8 action fixes
          title: "Fixes by autopep8 action"
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          branch: "erorr"
          body: |
            "test body pr"
        # run: |
        #   git config --global user.name ekamanelly
        #   git config --global user.email ekamanelly@users.noreply.github.com
        #   git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        #   git push origin master

      # -  name: Build image and push to Docker Hub Container Registry
      #    uses: docker/build-push-action@v2
      #    with:
      #     push: ${{ github.ref == 'refs/heads/circleci-project-setup' }}
      #     # relative path to the place where source code with Dockerfile is located
      #     # context: app/
      #     # # Note: tags has to be all lower-case
      #     # tags: |
      #     #  emmanuelekama/node-web-app:0.0.01
              

                  

       